# Подключаем необходимые библиотеки
using Plots
using DifferentialEquations

# Указываем начальные данные для моделирования эпидемии
N = 6730     # Общее количество особей на острове
I0 = 46      # Начальное количество заболевших особей
R0 = 8       # Начальное количество особей с иммунитетом
S0 = N - I0 - R0  # Начальное количество здоровых, но восприимчивых особей
alpha = 0.6  # Коэффициент заболеваемости
beta = 0.2   # Коэффициент выздоровления

# Определяем функцию, описывающую систему дифференциальных уравнений
function ode_fn(du, u, p, t)
    S, I, R = u
    # Дифференциальные уравнения модели SIR
    du[1] = 0           # Изменение количества восприимчивых особей (не изменяется)
    du[2] = -beta * u[2]         # Изменение количества инфицированных особей
    du[3] = beta * u[2]          # Изменение количества особей с иммунитетом
end

# Начальные условия и временной интервал моделирования
v0 = [S0, I0, R0]
tspan = (0.0, 60.0)

# Создаем объект, представляющий задачу дифференциальных уравнений (ODEProblem)
prob = ODEProblem(ode_fn, v0, tspan)

# Решаем дифференциальные уравнения
sol = solve(prob, dtmax = 0.05)

# Получаем решение
S = [u[1] for u in sol.u]
I = [u[2] for u in sol.u]
R = [u[3] for u in sol.u]
T = [t for t in sol.t]

# Строим графики
plt = plot(
    dpi = 600,               # Разрешение графика
    legend = :topright      # Позиция легенды
)

# График количества восприимчивых особей
plot!(
    plt,
    T,
    S,
    label = "Восприимчивые особи",  # Подпись для легенды
    color = :purple                   # Цвет графика
)

# График количества инфицированных особей
plot!(
    plt,
    T,
    I,
    label = "Инфицированные особи", # Подпись для легенды
    color = :red                      # Цвет графика
)

# График количества особей с иммунитетом
plot!(
    plt,
    T,
    R,
    label = "Особи с иммунитетом",   # Подпись для легенды
    color = :green                    # Цвет графика
)

# Сохраняем график в файл
savefig(plt, "jullab6_1.png")

