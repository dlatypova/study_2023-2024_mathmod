using Plots             # Импорт пакета для построения графиков
using DifferentialEquations   # Импорт пакета для решения дифференциальных уравнений

N = 1950                # Общее количество людей в аудитории
n0 = 25                 # Начальное количество людей, знающих о товаре

# Определение функции, описывающей дифференциальное уравнение
function ode_fn(du, u, p, t)
    (n) = u
    du[1] = (0.000065 + 0.433*u[1])*(N - u[1])  # Дифференциальное уравнение
end

v0 = [n0]               # Начальные условия
tspan = (0.0, 0.1)      # Временной интервал

# Определение задачи для решения дифференциального уравнения
prob = ODEProblem(ode_fn, v0, tspan)

# Решение дифференциального уравнения
sol = solve(prob)

# Извлечение значений n(t) и времени t из решения
n = [u[1] for u in sol.u]
T = [t for t in sol.t]

# Нахождение максимальной скорости распространения рекламы и соответствующих значений времени и n(t)
max_dn = 0;
max_dn_t = 0;
max_dn_n = 0;
for (i, t) in enumerate(T)
    if sol(t, Val{1})[1] > max_dn
        global max_dn = sol(t, Val{1})[1]
        global max_dn_t = t
        global max_dn_n = n[i]
    end
end

# Построение графика
plt = plot(
  dpi = 600,            # Разрешение графика
  title = "Эффективность распространения рекламы (2) ",   # Заголовок графика
  legend = false)       # Отключение легенды

# Добавление графика n(t)
plot!(
  plt,
  T,
  n,
  color = :purple)     # Цвет графика

# Добавление точки максимальной скорости распространения рекламы
plot!(
  plt,
  [max_dn_t],
  [max_dn_n],
  seriestype = :scatter,
  color = :purple)      # Цвет точки

# Сохранение графика в файл
savefig(plt, "jullab7_2.png")

